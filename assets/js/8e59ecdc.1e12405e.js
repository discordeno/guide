"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[2389],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return f}});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var c=r.createContext({}),s=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},u=function(e){var n=s(e.components);return r.createElement(c.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=s(t),f=i,m=d["".concat(c,".").concat(f)]||d[f]||p[f]||o;return t?r.createElement(m,a(a({ref:n},u),{},{components:t})):r.createElement(m,a({ref:n},u))}));function f(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=d;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var s=2;s<o;s++)a[s]=t[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},7457:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return s},toc:function(){return u},default:function(){return d}});var r=t(7462),i=t(3366),o=(t(7294),t(3905)),a=["components"],l={sidebar_position:4},c="Initial Setup",s={unversionedId:"nodejs/initial-setup",id:"nodejs/initial-setup",title:"Initial Setup",description:"Config File",source:"@site/docs/nodejs/initial-setup.md",sourceDirName:"nodejs",slug:"/nodejs/initial-setup",permalink:"/docs/nodejs/initial-setup",editUrl:"https://github.com/discordeno/discordeno/tree/main/site/docs/nodejs/initial-setup.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Create Application",permalink:"/docs/nodejs/create-application"},next:{title:"Slash Commands",permalink:"/docs/nodejs/slash-command"}},u=[{value:"Config File",id:"config-file",children:[],level:2},{value:"Edit the main file",id:"edit-the-main-file",children:[],level:2}],p={toc:u};function d(e){var n=e.components,t=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"initial-setup"},"Initial Setup"),(0,o.kt)("h2",{id:"config-file"},"Config File"),(0,o.kt)("p",null,"Ideally, you should save your configs in an ",(0,o.kt)("inlineCode",{parentName:"p"},".env")," file. Out of simplicity for this guide, we are saving it in a\n",(0,o.kt)("inlineCode",{parentName:"p"},"config.json")," file."),(0,o.kt)("p",null,"Create a file named ",(0,o.kt)("inlineCode",{parentName:"p"},"config.json")," in your project folder and insert the following content:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "token": "YOUR_TOKEN_HERE",\n  "prefix": "!"\n}\n')),(0,o.kt)("h2",{id:"edit-the-main-file"},"Edit the main file"),(0,o.kt)("p",null,"Open the ",(0,o.kt)("inlineCode",{parentName:"p"},"index.js")," file which you have created earlier and then insert the following content:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'const Discord = require("discordeno");\nconst config = require("./config.json");\n\nconst client = Discord.createBot({\n  events: {\n    ready(client, payload) {\n      console.log(`Successfully connected Shard ${payload.shardId} to the gateway`);\n    },\n  },\n  intents: ["Guilds", "GuildMessages"],\n  token: config.token,\n});\n\nDiscord.startBot(client);\n')),(0,o.kt)("p",null,"Now you can start your bot by running the following command in your terminal:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cli"},"$ node index.js\n")))}d.isMDXComponent=!0}}]);