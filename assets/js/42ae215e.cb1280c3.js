"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[220],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return h}});var o=n(7294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,o,s=function(e,t){if(null==e)return{};var n,o,s={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var l=o.createContext({}),d=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=d(e.components);return o.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},p=o.forwardRef((function(e,t){var n=e.components,s=e.mdxType,r=e.originalType,l=e.parentName,c=a(e,["components","mdxType","originalType","parentName"]),p=d(n),h=s,y=p["".concat(l,".").concat(h)]||p[h]||u[h]||r;return n?o.createElement(y,i(i({ref:t},c),{},{components:n})):o.createElement(y,i({ref:t},c))}));function h(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var r=n.length,i=new Array(r);i[0]=p;var a={};for(var l in t)hasOwnProperty.call(t,l)&&(a[l]=t[l]);a.originalType=e,a.mdxType="string"==typeof e?e:s,i[1]=a;for(var d=2;d<r;d++)i[d]=n[d];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}p.displayName="MDXCreateElement"},3650:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return a},contentTitle:function(){return l},metadata:function(){return d},toc:function(){return c},default:function(){return p}});var o=n(7462),s=n(3366),r=(n(7294),n(3905)),i=["components"],a={sidebar_position:1},l="Frequently Asked Questions",d={unversionedId:"general/frequently-asked-questions",id:"general/frequently-asked-questions",title:"Frequently Asked Questions",description:"Does Discordeno Support TypeScript?",source:"@site/docs/general/frequently-asked-questions.md",sourceDirName:"general",slug:"/general/frequently-asked-questions",permalink:"/docs/general/frequently-asked-questions",editUrl:"https://github.com/discordeno/discordeno/tree/main/site/docs/general/frequently-asked-questions.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Discordeno",permalink:"/docs/intro"},next:{title:"Getting Started",permalink:"/docs/general/getting-started"}},c=[{value:"Does Discordeno Support TypeScript?",id:"does-discordeno-support-typescript",children:[],level:2},{value:"How Stable Is Discordeno?",id:"how-stable-is-discordeno",children:[],level:2},{value:"Why Doesn&#39;t Discordeno Use Classes or EventEmitter?",id:"why-doesnt-discordeno-use-classes-or-eventemitter",children:[],level:2},{value:"Why Do You Have A Class for Collection If Classes Are Bad?",id:"why-do-you-have-a-class-for-collection-if-classes-are-bad",children:[],level:2},{value:"Why Are there no options in Discordeno?",id:"why-are-there-no-options-in-discordeno",children:[],level:2},{value:"Why Do I See errors Like &quot;MISSING_VIEW_CHANNEL&quot; or &quot;BOTS_HIGHEST_ROLE_TOO_LOW&quot;?",id:"why-do-i-see-errors-like-missing_view_channel-or-bots_highest_role_too_low",children:[],level:2}],u={toc:c};function p(e){var t=e.components,n=(0,s.Z)(e,i);return(0,r.kt)("wrapper",(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"frequently-asked-questions"},"Frequently Asked Questions"),(0,r.kt)("h2",{id:"does-discordeno-support-typescript"},"Does Discordeno Support TypeScript?"),(0,r.kt)("p",null,"Discordeno provides first class support for TypeScript! Since Deno provides\nsupport for TypeScript, that also comes into Discordeno. This means you don't\nneed to compile TypeScript before you use it. However, this isn't really why\nDiscordeno is the best library for TypeScript developers. When I developed this\nlibrary, I was experimenting with a lot of different things and one of them was\nautomated typings."),(0,r.kt)("p",null,"Whenever I used other libraries, I was always seeing typings being inaccurate or\nproblematic. This is because in any Discord API library, the majority is not\nused by the library itself so TypeScript doesn't warn the library developers.\nThis makes it extremely likely that those typings become inaccurate or out of\ndate because of simple mistakes like forgetting to update typings. Sometimes\nlibraries will add a property and forget to add that on their typings. This\nmakes it usable for JavaScript developers but not for TypeScript devs. For\nTypeScript developers, typings are everything! Discordeno treats typings as part\nof it's code! A breaking change in typings is a breaking change for the library!"),(0,r.kt)("h2",{id:"how-stable-is-discordeno"},"How Stable Is Discordeno?"),(0,r.kt)("p",null,"One of the biggest issues with almost every library (that I have used) is\nstability. None of the libraries gave much love and attention to TypeScript\ndevelopers the way it deserves. Sometimes TypeScript projects would break\nbecause breaking changes to typings did not make a MAJOR bump so TypeScript bots\nin production would break. Sometimes I was personally maintaining the typings\nbecause no one else was for that lib. Some libs were pre 1.0 and didn't even\nhave a stable branch/version where I would not have to worry about breaking\nchanges."),(0,r.kt)("p",null,"This is why I made it one of my foundational goals of this library to have the\nbest stability for TypeScript developers. No matter how small, a breaking change\nis a breaking change when it affects the public API. I could care less if we end\nup at version 500. Being afraid to bump a MAJOR because it's a small change or a\ntyping change is a terrible decision as a library maintainer and destroys the\nexperience for end users."),(0,r.kt)("h2",{id:"why-doesnt-discordeno-use-classes-or-eventemitter"},"Why Doesn't Discordeno Use Classes or EventEmitter?"),(0,r.kt)("p",null,"This is a design decision for the lib itself. You can still use class if you\nwant on your bot. In fact, I hope someone makes a framework/templates for this\nlib one day using classes so that devs have a choice on which style they prefer.\nWithout trying to write an entire thesis statement on the reasons why I avoided\nClasses in this lib, I will just link to the best resources I believe help\nexplain it."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://dannyfritz.wordpress.com/2014/10/11/class-free-object-oriented-programming/"},"Really good article")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=PSGEjv3Tqo0"},"Lecture by one of the developers who makes\nJavaScript"))),(0,r.kt)("p",null,"In regards to EventEmitter, I believe a functional event API was a much better\nchoice. EventEmitter at it's core is simply just functions that run when a\ncertain event is emitted. In Discordeno, that function is executed instead of\nemitting some event to trigger that function."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'// EventEmitter Example\nEventEmitter.emit("guildCreate", guild);\n// Discordeno Example\neventHandlers.guildCreate?.(guild);\n')),(0,r.kt)("p",null,"There isn't really any difference especially for users when they use it. One bad\nthing about EventEmitter is that if misused it can easily cause memory leaks. It\nis very easy to open yourself up to these memory leak issues. It has happened to\nme when I started coding as well. This is why I wanted Discordeno's\nimplementation to help devs avoid the issues I had. It prevents anyone from\nhaving this as a potential issue. Another issue with EventEmitter is trying to\nupdate the code in those functions without having to deal with headaches left\nand right of removing and adding listeners. You don't need to worry about\nbinding or not binding events. They are just pure functions"),(0,r.kt)("p",null,"In Discordeno, this is extremely simple, you just simply give it the new event\nhandlers."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"updateEventHandlers(newEventHandlers);\n")),(0,r.kt)("h2",{id:"why-do-you-have-a-class-for-collection-if-classes-are-bad"},"Why Do You Have A Class for Collection If Classes Are Bad?"),(0,r.kt)("p",null,"The Collection class is an exception in the library where a class was allowed.\nThis is because Collection extends Map. The Map class is provided by JavaScript\nitself and is extremely fast. You can perform millions of operations a second\nwith a Map. Maps are too useful to avoid and don't have downsides like\nEventEmitters do. The Collection class simply adds on other functionality that\nDiscordeno users felt they needed. Although I am against using classes whenever\npossible, I am also a big supporter of providing the best developer experience."),(0,r.kt)("h2",{id:"why-are-there-no-options-in-discordeno"},"Why Are there no options in Discordeno?"),(0,r.kt)("p",null,"Discordeno is not a library that handles code in the exact way every person\nwants it to. It is opinionated. Discordeno defaults to the Discord recommended\noptions or the best options for majority of developers needs. For example, there\nis no option of fetching all members startup. This is a practice that Discord\ndoes not recommend or want users doing. By default, we don't support stuff like\nthis. In Discordeno, we follow Discords recommended solution and it just works\ninternally. The End! No fuss! No Muss! Just good stuff!"),(0,r.kt)("p",null,"Now, I understand that there are times when it's necessary to be able to\ncustomize this and fetch them all. If you are advanced enough to need these\noptions, you should be able to simply do it yourself. For most users, this is\njust an unnecessary option. The main module should remain minimalistic and easy\nto use for 99% of users."),(0,r.kt)("h2",{id:"why-do-i-see-errors-like-missing_view_channel-or-bots_highest_role_too_low"},'Why Do I See errors Like "MISSING_VIEW_CHANNEL" or "BOTS_HIGHEST_ROLE_TOO_LOW"?'),(0,r.kt)("p",null,"Discordeno is the only library(that I have used), that has built in permission\nhandling. A lot of bots get automatically banned by Discord because they forget\nto handle permissions. When bots don't check permissions and continue to send\nrequests to the API, this leads to bots being banned. I have tried to request\nadding this feature into libraries but they were reluctant to do so because it\nwould require the devs to maintain the library whenever an update was made by\nDiscord."),(0,r.kt)("p",null,"Discordeno provides you specific keywords that you can use to send a clean\nresponse to the end user of your choosing. I have even seen some bots have\nhundreds of thousands of Missing Permission or Missing Access errors because\nlibraries don't handle it. IMO, this is a crucial part of any good library as\nmuch as it is to handle rate limiting."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'import { Errors, Message } from "https://deno.land/x/discordeno@10.0.0/mod.ts";\n\nexport function handleCommandError(message: Message, type: Errors) {\n  switch (type) {\n    case Errors.MISSING_MANAGE_NICKNAMES:\n      return message.channel.sendMessage(\n        "The bot does not have the necessary permission to manage/edit other user\'s nicknames. Grant the **MANAGE_NICKNAME** permission to the bot and try again.",\n      );\n    case Errors.MISSING_MANAGE_ROLES:\n      // Note: i18n is not part of the library. This is just an example of how you could use i18n for custom error responses.\n      return message.channel.sendMessage(i18n.translate(type));\n  }\n}\n')))}p.isMDXComponent=!0}}]);