"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[6032],{3905:function(e,n,t){t.d(n,{Zo:function(){return d},kt:function(){return v}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=r.createContext({}),c=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},d=function(e){var n=c(e.components);return r.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),p=c(t),v=o,m=p["".concat(l,".").concat(v)]||p[v]||u[v]||a;return t?r.createElement(m,s(s({ref:n},d),{},{components:t})):r.createElement(m,s({ref:n},d))}));function v(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,s=new Array(a);s[0]=p;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var c=2;c<a;c++)s[c]=t[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},6997:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return i},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return d},default:function(){return p}});var r=t(7462),o=t(3366),a=(t(7294),t(3905)),s=["components"],i={sidebar_position:2},l="Create Event Manager",c={unversionedId:"nodejs/EventHandler/event-manager",id:"nodejs/EventHandler/event-manager",title:"Create Event Manager",description:"In order to process certain events, you must provide the Discordeno client with functions for these events.",source:"@site/docs/nodejs/EventHandler/event-manager.md",sourceDirName:"nodejs/EventHandler",slug:"/nodejs/EventHandler/event-manager",permalink:"/docs/nodejs/EventHandler/event-manager",editUrl:"https://github.com/discordeno/discordeno/tree/main/site/docs/nodejs/EventHandler/event-manager.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Getting Started with the Event Handler",permalink:"/docs/nodejs/EventHandler/getting-started"},next:{title:"Handle Events",permalink:"/docs/nodejs/EventHandler/handle-event"}},d=[{value:"Create Event Folder",id:"create-event-folder",children:[],level:2},{value:"Load your Events",id:"load-your-events",children:[],level:2}],u={toc:d};function p(e){var n=e.components,t=(0,o.Z)(e,s);return(0,a.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"create-event-manager"},"Create Event Manager"),(0,a.kt)("p",null,"In order to process certain events, you must provide the Discordeno client with functions for these events."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'const Discord = require("discordeno");\nconst config = require("./config.json");\n\nconst client = Discord.createBot({\n  events: {\n    ready(client, payload) {\n      console.log(`Successfully connected Shard ${payload.shardId} to the gateway`);\n    },\n\n    async messageCreate(client, message) {\n      if (message.content === "!ping") {\n        await client.helpers.sendMessage(message.channelId, { content: "pong" });\n      }\n\n      console.log(`Received message: ${message.content || message.embeds}`);\n    },\n  },\n  intents: ["Guilds", "GuildMessages"],\n  token: config.token,\n});\n\nDiscord.startBot(client);\n')),(0,a.kt)("p",null,"As you listen to more and more events, the functions code grows along with them, so you can quickly lose track."),(0,a.kt)("p",null,"To avoid this, we recommend storing the event functions divided into files in a separate folder."),(0,a.kt)("h2",{id:"create-event-folder"},"Create Event Folder"),(0,a.kt)("p",null,"Create a folder called ",(0,a.kt)("inlineCode",{parentName:"p"},"events")," in your project folder."),(0,a.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"note")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"The event files have to be named using camelCase so that they can be understood by the client. e.g ",(0,a.kt)("inlineCode",{parentName:"p"},"message")," ->\n",(0,a.kt)("inlineCode",{parentName:"p"},"messageCreate.js"),". You can check the typings see how the events are called."))),(0,a.kt)("p",null,"Ready Event:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"module.exports = (client, payload) => {\n  if (payload.shardId + 1 === client.gateway.maxShards) {\n    // All Shards are ready\n    console.log(`Successfully connected to the gateway as ${payload.user.username}#${payload.user.discriminator}`);\n  }\n};\n")),(0,a.kt)("h2",{id:"load-your-events"},"Load your Events"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'const fs = require("fs");\nconst path = require("path");\n\nconst resolveFolder = (folderName) => path.resolve(__dirname, ".", folderName);\n\nclass EventManager {\n  constructor(client) {\n    this.cache = new Map();\n    this._events = {};\n  }\n\n  load(options = {}) {\n    const eventsFolder = resolveFolder("../events");\n    fs.readdirSync(eventsFolder).map(async (file) => {\n      if (!file.endsWith(".js")) return;\n\n      const fileName = path.join(eventsFolder, file);\n      const event = require(fileName);\n      const eventName = file.split(".")[0];\n\n      this._events[`${eventName}`] = event;\n    });\n\n    return this._events;\n  }\n}\n\nmodule.exports = EventManager;\n')),(0,a.kt)("p",null,"The code above, which can also be found in the\n",(0,a.kt)("a",{parentName:"p",href:"https://github.com/discordeno/discordeno/tree/main/template/nodejs/Managers/EventManager.js"},"template repo")," will loop\nthrough all the files in the ",(0,a.kt)("inlineCode",{parentName:"p"},"events")," folder and load the functions into the ",(0,a.kt)("inlineCode",{parentName:"p"},"_events")," object."),(0,a.kt)("p",null,"In order to let the client know which events should be processed, you need to pass the functions in the\n",(0,a.kt)("inlineCode",{parentName:"p"},"createBot<options>.events")," object."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'const Discord = require("discordeno");\nconst config = require("./config.json");\n\nconst EventManager = require("./Managers/EventManager.js");\nconst events = new EventManager({});\n\nconst client = Discord.createBot({\n  events: events.load({}),\n  intents: ["Guilds", "GuildMessages"],\n  token: config.token,\n});\n\nDiscord.startBot(client);\n')),(0,a.kt)("p",null,"Moreover, you can customize the ",(0,a.kt)("inlineCode",{parentName:"p"},"EventManager")," and add more functionality to it and make it exactly fit your your needs\nor even emit events, by extending it."),(0,a.kt)("p",null,"Of course you wonder what you can do with all of this now. We will explain this further on the next page."))}p.isMDXComponent=!0}}]);